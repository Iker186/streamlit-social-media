name: spark

on:
  repository_dispatch:
    types: [spark]

jobs:
  spark:
    runs-on: ubuntu-latest
    environment: social-media

    permissions:
      contents: write

    steps:
    - name: 🛒 Clonar el repositorio
      uses: actions/checkout@v4

    - name: 🐍 Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: 📦 Instalar dependencias del proyecto
      run: pip install --upgrade pip && pip install -r requirements.txt

    - name: ☕️ Configurar Java
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: temurin

    - name: ⚡️ Instalar Spark
      uses: vemonet/setup-spark@v1
      with:
        spark-version: '3.5.3'
        hadoop-version: '3'

    - name: 📥 Descargar dataset y script
      run: |
        wget -O dataset.csv ${{ github.event.client_payload.dataseturl }}
        wget -O app.py ${{ github.event.client_payload.codeurl }}
    - name: 📝 Listar archivos descargados
      run: ls -la

    - name: 🚀 Ejecutar Spark
      run: spark-submit --master local app.py 

    - name: 🧰 Verificar resultados
      run: ls -la results

    - name: 📤 Commit y Push de resultados
      env: 
        CI_COMMIT_MESSAGE: save spark results
        CI_COMMIT_AUTHOR: Iker186 
      run: |
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "sancheziker549@gmail.com"
    
        git stash --include-untracked
        git pull origin main --rebase
        git stash pop || echo "No changes to restore"
    
        git add results/
        git commit -m "${{ env.CI_COMMIT_MESSAGE }}" || echo "No changes to commit"
        git push origin main